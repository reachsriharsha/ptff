include:
  - docker-compose.networks.yaml
  - docker-compose.milvus.yaml
  - docker-compose.tools.yaml

services:
  nginx:
    container_name: ptff-nginx
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - backend
#      - frontend
    networks:
      - ptff_network
  
  redis:
    container_name: ptff-redis
    image: redis:alpine
    ports:
      - "6379:6379"
    networks:
      - ptff_network

  postgres:
    container_name: ptff-postgres
    image: postgres:17-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: ptffdb
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - ptff_network

  backend:
    container_name: ptff-backend
    build:
      context: .
      dockerfile: be/Dockerfile
    environment:
      - PORT=8000
      - REDIS_URL = redis://redis:6379/0
    env_file:
      - ./be/.env.prod
    depends_on:
      - redis
      - postgres
    volumes:
      - ./be:/app
      - ./uploads/be:/app/uploads
    networks:
      - ptff_network

  celery_worker:
    container_name: ptff-celery-worker  
    build:
      context: .
      dockerfile: be/Dockerfile
    command: celery -A tasks worker --loglevel=info
    env_file:
      - ./be/.env.prod
    depends_on:
      - redis
      - backend
    volumes:
      - ./be:/app
      - ./uploads/be:/app/uploads
    networks:
      - ptff_network
      
  frontend:
    container_name: ptff-frontend
    build:
      context: .
      dockerfile: fe/Dockerfile
    environment:
      - BACKEND_URL=http://nginx/api
    env_file:
      - ./fe/.env.prod
    volumes:
      - ./fe:/app
      - ./uploads/fe:/app/uploads
    networks:
      - ptff_network

  ollama:
    container_name: ptff-ollama
    image: ollama/ollama:latest  # Use the latest Ollama image
    ports:
      - "11434:11434"  # Expose the Ollama API port
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/ollama:/root/.ollama
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/ollama/scripts:/root/scripts
    privileged: true  # Required for GPU support
    environment:
      #- GPU_MODE=auto  # Enable GPU support if available
      - GIN_MODE=release
    restart: unless-stopped 
volumes:
  postgres_data:
  portainer_data: